initSidebarItems({"enum":[["Atomicity","An `enum` specifying the current atomicity of a `ParserState`."],["Error","An `enum` which defines possible errors."],["Lookahead","An `enum` specifying the current lookahead status of a `ParserState`."],["Token","An `enum` representing tokens generated by a `Parser`."]],"fn":[["state","Creates a `ParserState` from a `&str`, supplying it to a closure `f`."]],"macro":[["fails_with","A `macro` which facilitates grammar testing and debugging by comparing produced errors."],["parses_to","A `macro` which facilitates grammar testing and debugging by comparing produced tokens."]],"mod":[["iterators","A `mod` containing iterators and constructs to aid in parser output manipulation."],["prec_climber","A `mod` containing constructs useful in infix operator parsing with the precedence climbing method."]],"struct":[["ParserState","A `struct` which contains the complete state of a `Parser`."],["Position","A `struct` containing a position that is tied to a `&str` which provides useful methods to manually parse it. This leads to an API largely based on the standard `Result`."],["Span","A `struct` of a span over a `&str`. It is created from either two `Position`s or from a `Pair`."]],"trait":[["Parser","A `trait` that defines a `Parser`."],["RuleType","A `trait` which parser rules must implement."]]});